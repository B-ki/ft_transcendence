version: '3.8'

name: transcendence
services:
  ## Database ##
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
      POSTGRES_USER: ${POSTGRES_USER:?err}
      POSTGRES_DB: ${POSTGRES_DB:?err}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - database
        
  ## Website Frontend ##
  front:
    image: ft-transcendance-front:latest
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: front
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - network
    ports:
      - 8080:80

  ## Backend server API ##
  api:
    image: ft-transcendance-api:latest
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST:?err}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
      POSTGRES_USER: ${POSTGRES_USER:?err}
      POSTGRES_PORT: ${POSTGRES_PORT:?err}
      POSTGRES_DB: ${POSTGRES_DB:?err}
      DATABASE_URL: ${DATABASE_URL:?err}
      FRONT_PORT: ${PORT:?err}
      JWT_SECRET: ${JWT_SECRET:?err}
      APP_ID: ${APP_ID:?err}
      APP_SECRET: ${APP_SECRET:?err}
      HOST: ${HOST:?err}
      PORT: 3000
    networks:
      - network
      - database
    expose:
      - 3000

volumes:
  db_data:

networks:
  network:
    driver: bridge
  database:
    driver: bridge
