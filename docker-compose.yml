version: '3.8'

services:
  ## Database ##
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend
  ## Website Frontend ##
  front:
    image: ft-transcendance-front:latest
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: front
    restart: unless-stopped
    networks:
      - frontend
    ports:
      - 8080:80
  ## Backend server API ##
  api:
    image: ft-transcendance-api:latest
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD:?err}
      DB_USER: ${POSTGRES_USER:?err}
      DB_NAME: ${POSTGRES_DB:?err}
      SESSION_SECRET: ${SESSION_SECRET:?err}
    networks:
      - backend
    ports:
      - 8081:8081

volumes:
  db_data:

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
