generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum ChannelType {
    PUBLIC
    PROTECTED
    PRIVATE
}

enum ChannelRole {
    USER
    ADMIN
    OWNER
}

model User {
    id          Int           @id @default(autoincrement())
    createdAt   DateTime      @default(now())
    login       String        @unique
    email       String        @unique
    isConnected Boolean
    imageUrl    String?
    displayName String
    firstName   String
    lastName    String
    username    String?
    bannerUrl   String?
    description String?
    channelUser ChannelUser[]
    gamesWon    Game[]        @relation("GameWinner")
    gamesLost   Game[]        @relation("GameLoser")
    friends     User[]        @relation("friends")
    friendOf    User[]        @relation("friends")
}

model ChannelUser {
    id        Int         @id @default(autoincrement())
    user      User        @relation(fields: [userId], references: [id])
    userId    Int
    channel   Channel     @relation(fields: [channelId], references: [id])
    channelId Int
    role      ChannelRole
    Message   Message[]

    @@unique([userId, channelId])
}

model Channel {
    id        Int           @id @default(autoincrement())
    createdAt DateTime      @default(now())
    updatedAt DateTime      @updatedAt
    name      String        @unique
    type      ChannelType
    password  String?
    users     ChannelUser[]
    messages  Message[]
    isDM      Boolean       @default(false) // is Direct Message
}

model Message {
    id        Int         @id @default(autoincrement())
    createdAt DateTime    @default(now())
    channel   Channel     @relation(fields: [channelId], references: [id])
    channelId Int
    author    ChannelUser @relation(fields: [authorId], references: [id])
    authorId  Int
    content   String
}

model Game {
    id          Int         @id @default(autoincrement())
    createdAt   DateTime    @default(now())
    winner      User?   @relation("GameWinner", fields: [winnerId], references: [id])
    winnerId    Int
    loser       User?   @relation("GameLoser", fields: [loserId], references: [id])
    loserId     Int
    winnerScore Int
    loserScore  Int
}
